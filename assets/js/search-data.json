{
  
    
        "post0": {
            "title": "Integral Numérica - Método do Trapézio Composto",
            "content": "vamos usar Método numérico para o cálculo de áreas de funções. . M&#233;todo do Trap&#233;zio Composto . Regra dos Trap&#233;zios &#8211; Defini&#231;&#245;es . Numericamente a regra dos trapézios é obtida aproximando-se f por um polinômio interpolador de 1° grau. | Em seguida calcula-se a área do trapézio cuja base está sobre o eixo dos x. | . Origem: Pag(12) . Regra dos Trapézios – Dedução da Fórmula . Teorema . Se f for uma função continua em (a, b) onde a é o limite inferior de integração e b o limite superior de integração, A regra do Trapézio que podemos usar para aproximar $ int_{a}^{b} f(x) ,dx $ é dada por: . n intervalos – intervalos igualmente espaçados . $$h = dfrac{b-a}{n}$$ . $$ int_{a}^{b} f(x) ,dx approx dfrac{1}{2}h(f(a) + 2[f(x_1) + f(x_2) + dots + f(x_{n-1})] + f(b))$$ . . . Implementa&#231;&#227;o do Algor&#237;timo com Python . Importando as Bibliotecas que ser&#227;o usadas no c&#243;digo . import numpy as np import matplotlib.pyplot as plt %matplotlib inline import seaborn as sns sns.set_theme() . C&#243;digo para integra&#231;&#227;o num&#233;rica usando o M&#233;todo do Trap&#233;zio . Onde: . [a] Limite inferior | [b] Limite superior | [n] sub-intervalos | [f ] função que será integrada | . def integ_trap(f, a, b, n): # O passo de integração, n é a quantidade de subintervalos que queremos h = (b-a)/ float(n) f_a = f(a) x = a x += h somatorio = 0.0 while (x &lt; b): somatorio += 2*f(x) x += h f_b = f(b) integral_trap = (h /2.0)*(f_a + somatorio + f_b) print(f&quot;Integral Trapézio ≈ {integral_trap}&quot;) . . Teste 1 . Aplicando o Método do Trapézio ao exemplo abaixo: . $$ int_{0}^{2} cos(x) ,dx$$ . . f = lambda x: np.cos(x) # Aplicando a integral usando o método do trapézio a = 0; b = 2; n = 100000 integ_trap(f, a, b, n) . Integral Trapézio ≈ 0.9092891038599877 . . Teste 2 . Aplicando o Método do Trapézio ao exemplo abaixo: . $$ int_{-1}^{2} 2 e^x ,dx$$ . . f = lambda x: 2*x-np.exp(x) # Aplicando a integral usando o método do trapézio a = -1; b = 2; n = 10000 integ_trap(f, a, b, n) . Integral Trapézio ≈ -4.0221934272473705 . . Teste 3 . Aplicando o Método do Trapézio ao exemplo abaixo: . $$ int_{0}^{6} x^2 ,dx$$ . . f = lambda x: x**2 # Aplicando a integral usando o método do trapézio a = 0; b = 6; n = 1000 integ_trap(f, a, b, n) . Integral Trapézio ≈ 72.00003599999896 .",
            "url": "https://oseiasdfarias.github.io/jupyter-notebooks/2022/02/23/integral-numerica-trapezio-composto.html",
            "relUrl": "/2022/02/23/integral-numerica-trapezio-composto.html",
            "date": " • Feb 23, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Sobre",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://oseiasdfarias.github.io/jupyter-notebooks/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://oseiasdfarias.github.io/jupyter-notebooks/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}