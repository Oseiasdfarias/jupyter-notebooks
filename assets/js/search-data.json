{
  
    
        "post0": {
            "title": "Integral Num√©rica - M√©todo do Trap√©zio",
            "content": "vamos usar M√©todo num√©rico para o c√°lculo de √°reas de fun√ß√µes. . M&#233;todo do Trap&#233;zio . Regra dos Trap&#233;zios &#8211; Defini&#231;&#245;es . Numericamente a regra dos trap√©zios √© obtida aproximando-se f por um polin√¥mio interpolador de 1¬∞ grau. . | Em seguida calcula-se a √°rea do trap√©zio cuja base est√° sobre o eixo dos x. . | . Origem:Pag(12) Regra dos Trap√©zios ‚Äì Dedu√ß√£o da F√≥rmula . Teorema . Se f for uma fun√ß√£o continua em (a, b) onde a √© o limite inferior de integra√ß√£o e b o limite superior de integra√ß√£o, A regra do Trap√©zio que podemos usar para aproximar $ int_{a}^{b} f(x) ,dx $ √© dada por: . n intervalos ‚Äì intervalos igualmente espa√ßados . $$h = dfrac{b-a}{n}$$ . $$ int_{a}^{b} f(x) ,dx approx dfrac{1}{2}h(f(a) + 2[f(x_1) + f(x_2) + dots + f(x_{n-1})] + f(b))$$ . . Implementa&#231;&#227;o do Algor&#237;timo com Python . Importando as Bibliotecas que ser&#227;o usadas no c&#243;digo . import numpy as np import matplotlib.pyplot as plt %matplotlib inline import seaborn as sns sns.set_theme() . C&#243;digo para integra&#231;&#227;o num&#233;rica usando o M&#233;todo do Trap&#233;zio . def integ_trap(f, a, b, n): # a Limite inferior # b Limite superior # O passo de integra√ß√£o, n √© a quantidade de subintervalos que queremos h = (b-a)/ float(n) f_a = f(a) x = a x += h somatorio = 0.0 while (x &lt; b): somatorio += 2*f(x) x += h f_b = f(b) # 1/2‚Ñé(ùëì(ùëé)+2[ùëì(ùë•1)+ùëì(ùë•2)+‚ãØ+ùëì(ùë•ùëõ‚àí1)]+ùëì(ùëè)) integral_trap = (h /2.0)*(f_a + somatorio + f_b) print(f&quot;Integral Trap√©zio ‚âà {integral_trap}&quot;) . . Teste 1 . Aplicando o M√©todo do Trap√©zio ao exemplo abaixo: . $$ int_{0}^{2} cos(x) ,dx$$ . . f = lambda x: np.cos(x) # Aplicando a integral usando o m√©todo do trap√©zio a = 0 b = 2 n = 100000 integ_trap(f, a, b, n) . Integral Trap√©zio ‚âà 0.9092891038599877 . . Teste 2 . Aplicando o M√©todo do Trap√©zio ao exemplo abaixo: . $$ int_{-1}^{2} 2 e^x ,dx$$ . . f = lambda x: 2*x-np.exp(x) # Aplicando a integral usando o m√©todo do trap√©zio a = -1 b = 2 n = 10000 integ_trap(f, a, b, n) . Integral Trap√©zio ‚âà -4.0221934272473705 . . Teste 3 . Aplicando o M√©todo do Trap√©zio ao exemplo abaixo: . $$ int_{0}^{6} x^2 ,dx$$ . . f = lambda x: x**2 # Aplicando a integral usando o m√©todo do trap√©zio a = 0 b = 6 n = 1000 integ_trap(f, a, b, n) . Integral Trap√©zio ‚âà 72.00003599999896 .",
            "url": "https://oseiasdfarias.github.io/jupyter-notebooks/2022/02/24/integral-numerica-metodo-trapezio.html",
            "relUrl": "/2022/02/24/integral-numerica-metodo-trapezio.html",
            "date": " ‚Ä¢ Feb 24, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a ‚Äúlevel 1 heading‚Äù in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here‚Äôs a footnote 1. Here‚Äôs a horizontal rule: . . Lists . Here‚Äôs a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes ‚Ä¶and‚Ä¶ . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote.¬†&#8617; . |",
            "url": "https://oseiasdfarias.github.io/jupyter-notebooks/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " ‚Ä¢ Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Sobre",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats.¬†&#8617; . |",
          "url": "https://oseiasdfarias.github.io/jupyter-notebooks/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "https://oseiasdfarias.github.io/jupyter-notebooks/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}